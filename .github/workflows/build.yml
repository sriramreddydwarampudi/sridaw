name: Build Kivy APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install System Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          zip unzip openjdk-17-jdk \
          libncurses6 zlib1g-dev curl git \
          python3 python3-pip python3-venv python3-setuptools \
          autoconf libtool pkg-config cmake \
          libffi-dev libssl-dev

    - name: Setup Android SDK
      run: |
        mkdir -p ~/android-sdk
        cd ~/android-sdk
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip -q commandlinetools-linux-*.zip
        rm commandlinetools-linux-*.zip
        mkdir -p cmdline-tools/latest
        mv cmdline-tools/* cmdline-tools/latest/
        
        echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
        echo "PATH=$HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-sdk/platform-tools:$PATH" >> $GITHUB_ENV
        mkdir -p ~/.android
        touch ~/.android/repositories.cfg

    - name: Install Android Tools (with retries)
      run: |
        yes | sdkmanager --licenses >/dev/null
        # Install with retries to handle network issues
        for i in {1..3}; do
          sdkmanager --verbose \
            "platform-tools" \
            "platforms;android-33" \
            "build-tools;33.0.0" \
            "ndk;25.1.8937393" && break || sleep 30
        done
        
        # Verify build-tools installation
        if [ ! -d "$ANDROID_HOME/build-tools/33.0.0" ]; then
          echo "Build tools not found at $ANDROID_HOME/build-tools/33.0.0"
          exit 1
        fi
        
        # Ensure AIDL is available in platform-tools
        if [ ! -f "$ANDROID_HOME/build-tools/33.0.0/aidl" ]; then
          echo "AIDL not found in build-tools"
          exit 1
        fi
        ln -sf $ANDROID_HOME/build-tools/33.0.0/aidl $ANDROID_HOME/platform-tools/aidl

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip wheel setuptools
        pip install --no-cache-dir \
          buildozer==1.5.0 \
          cython==0.29.36 \
          virtualenv==20.24.3 \
          kivy==2.2.1

    - name: Configure Buildozer
      run: |
        # Force use of our SDK path
        cat <<EOF > buildozer.spec
[app]
title = MyApp
package.name = myapp
package.domain = org.example
source.dir = .
source.include_exts = py,png,jpg,kv,atlas
version = 0.1
requirements = python3,kivy==2.2.1

[buildozer]
log_level = 2
warn_on_root = 1

android.sdk_path = $HOME/android-sdk
android.ndk_path = $HOME/android-sdk/ndk/25.1.8937393
android.build_tools_version = 33.0.0
android.api = 33
android.minapi = 21
android.ndk_version = 25.1.8937393
android.arch = armeabi-v7a
android.accept_sdk_license = True
android.gradle_download = False
EOF

    - name: Build APK
      run: |
        # Clean previous builds
        rm -rf .buildozer
        # Run build with debug output
        buildozer -v android debug 2>&1 | tee build.log
        # Check for AIDL in the correct location
        if [ ! -f "$ANDROID_HOME/build-tools/33.0.0/aidl" ]; then
          echo "ERROR: AIDL still missing after build!"
          exit 1
        fi

    - name: Upload APK Artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: app-debug
        path: bin/*.apk
        if-no-files-found: error
        retention-days: 7

    - name: Upload Build Log
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-log
        path: build.log
